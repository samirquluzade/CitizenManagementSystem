<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>